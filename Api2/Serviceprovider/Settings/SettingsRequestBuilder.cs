// <auto-generated/>
using Microsoft.Kiota.Abstractions;
using Qwips.SmartService.ServiceProvider.ClientSdk.Api2.Serviceprovider.Settings.Add;
using Qwips.SmartService.ServiceProvider.ClientSdk.Api2.Serviceprovider.Settings.Change;
using Qwips.SmartService.ServiceProvider.ClientSdk.Api2.Serviceprovider.Settings.Get;
using Qwips.SmartService.ServiceProvider.ClientSdk.Api2.Serviceprovider.Settings.GetAll;
using Qwips.SmartService.ServiceProvider.ClientSdk.Api2.Serviceprovider.Settings.GetByName;
using Qwips.SmartService.ServiceProvider.ClientSdk.Api2.Serviceprovider.Settings.Remove;
using Qwips.SmartService.ServiceProvider.ClientSdk.Api2.Serviceprovider.Settings.Search;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace Qwips.SmartService.ServiceProvider.ClientSdk.Api2.Serviceprovider.Settings {
    /// <summary>
    /// Builds and executes requests for operations under \api2\ServiceProvider\Settings
    /// </summary>
    public class SettingsRequestBuilder : BaseRequestBuilder {
        /// <summary>The add property</summary>
        public AddRequestBuilder Add { get =>
            new AddRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The change property</summary>
        public ChangeRequestBuilder Change { get =>
            new ChangeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The GetAll property</summary>
        public GetAllRequestBuilder GetAll { get =>
            new GetAllRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getByName property</summary>
        public GetByNameRequestBuilder GetByName { get =>
            new GetByNameRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getPath property</summary>
        public GetRequestBuilder GetPath { get =>
            new GetRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The remove property</summary>
        public RemoveRequestBuilder Remove { get =>
            new RemoveRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The search property</summary>
        public SearchRequestBuilder Search { get =>
            new SearchRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new SettingsRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public SettingsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api2/ServiceProvider/Settings", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new SettingsRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public SettingsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api2/ServiceProvider/Settings", rawUrl) {
        }
    }
}
