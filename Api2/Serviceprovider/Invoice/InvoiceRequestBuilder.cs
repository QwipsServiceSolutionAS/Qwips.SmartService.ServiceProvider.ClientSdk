// <auto-generated/>
using Microsoft.Kiota.Abstractions;
using Qwips.SmartService.ServiceProvider.ClientSdk.Api2.Serviceprovider.Invoice.Article;
using Qwips.SmartService.ServiceProvider.ClientSdk.Api2.Serviceprovider.Invoice.Attachpdf;
using Qwips.SmartService.ServiceProvider.ClientSdk.Api2.Serviceprovider.Invoice.Delete;
using Qwips.SmartService.ServiceProvider.ClientSdk.Api2.Serviceprovider.Invoice.Detail;
using Qwips.SmartService.ServiceProvider.ClientSdk.Api2.Serviceprovider.Invoice.Item;
using Qwips.SmartService.ServiceProvider.ClientSdk.Api2.Serviceprovider.Invoice.Pdf;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace Qwips.SmartService.ServiceProvider.ClientSdk.Api2.Serviceprovider.Invoice {
    /// <summary>
    /// Builds and executes requests for operations under \api2\ServiceProvider\Invoice
    /// </summary>
    public class InvoiceRequestBuilder : BaseRequestBuilder {
        /// <summary>The article property</summary>
        public ArticleRequestBuilder Article { get =>
            new ArticleRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The attachpdf property</summary>
        public AttachpdfRequestBuilder Attachpdf { get =>
            new AttachpdfRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deletePath property</summary>
        public DeleteRequestBuilder DeletePath { get =>
            new DeleteRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The detail property</summary>
        public DetailRequestBuilder Detail { get =>
            new DetailRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The pdf property</summary>
        public PdfRequestBuilder Pdf { get =>
            new PdfRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the Qwips.SmartService.ServiceProvider.ClientSdk.api2.ServiceProvider.Invoice.item collection</summary>
        /// <param name="position">The parent job id</param>
        public WithParentJobItemRequestBuilder this[int position] { get {
            var urlTplParams = new Dictionary<string, object>(PathParameters);
            urlTplParams.Add("parentJobId", position);
            return new WithParentJobItemRequestBuilder(urlTplParams, RequestAdapter);
        } }
        /// <summary>Gets an item from the Qwips.SmartService.ServiceProvider.ClientSdk.api2.ServiceProvider.Invoice.item collection</summary>
        /// <param name="position">The parent job id</param>
        [Obsolete("This indexer is deprecated and will be removed in the next major version. Use the one with the typed parameter instead.")]
        public WithParentJobItemRequestBuilder this[string position] { get {
            var urlTplParams = new Dictionary<string, object>(PathParameters);
            if (!string.IsNullOrWhiteSpace(position)) urlTplParams.Add("parentJobId", position);
            return new WithParentJobItemRequestBuilder(urlTplParams, RequestAdapter);
        } }
        /// <summary>
        /// Instantiates a new InvoiceRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public InvoiceRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api2/ServiceProvider/Invoice", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new InvoiceRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public InvoiceRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api2/ServiceProvider/Invoice", rawUrl) {
        }
    }
}
