// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.SmartService.ServiceProvider.ClientSdk.Models {
    public class JobDetailsDto : IParsable {
        /// <summary>The AddedFields property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JobAddedFieldsDto? AddedFields { get; set; }
#nullable restore
#else
        public JobAddedFieldsDto AddedFields { get; set; }
#endif
        /// <summary>The CreatedBy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedBy { get; set; }
#nullable restore
#else
        public string CreatedBy { get; set; }
#endif
        /// <summary>The CreatedDate property</summary>
        public DateTimeOffset? CreatedDate { get; set; }
        /// <summary>The DisplayName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>The EstimatedTime property</summary>
        public double? EstimatedTime { get; set; }
        /// <summary>The FirstLineComment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstLineComment { get; set; }
#nullable restore
#else
        public string FirstLineComment { get; set; }
#endif
        /// <summary>The Id property</summary>
        public int? Id { get; set; }
        /// <summary>The InvoiceReference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceReference { get; set; }
#nullable restore
#else
        public string InvoiceReference { get; set; }
#endif
        /// <summary>The JobPriority property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JobPriorityDto? JobPriority { get; set; }
#nullable restore
#else
        public JobPriorityDto JobPriority { get; set; }
#endif
        /// <summary>The JobPriorityId property</summary>
        public int? JobPriorityId { get; set; }
        /// <summary>The JobStatus property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JobStatusDto? JobStatus { get; set; }
#nullable restore
#else
        public JobStatusDto JobStatus { get; set; }
#endif
        /// <summary>The JobStatusId property</summary>
        public int? JobStatusId { get; set; }
        /// <summary>The JobSubStatus property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JobSubStatusDto? JobSubStatus { get; set; }
#nullable restore
#else
        public JobSubStatusDto JobSubStatus { get; set; }
#endif
        /// <summary>The JobSubStatusId property</summary>
        public int? JobSubStatusId { get; set; }
        /// <summary>The JobType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JobTypeDto? JobType { get; set; }
#nullable restore
#else
        public JobTypeDto JobType { get; set; }
#endif
        /// <summary>The JobTypeId property</summary>
        public int? JobTypeId { get; set; }
        /// <summary>The Modified property</summary>
        public DateTimeOffset? Modified { get; set; }
        /// <summary>The NoInvoice property</summary>
        public bool? NoInvoice { get; set; }
        /// <summary>The OrderId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrderId { get; set; }
#nullable restore
#else
        public string OrderId { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static JobDetailsDto CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new JobDetailsDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"AddedFields", n => { AddedFields = n.GetObjectValue<JobAddedFieldsDto>(JobAddedFieldsDto.CreateFromDiscriminatorValue); } },
                {"CreatedBy", n => { CreatedBy = n.GetStringValue(); } },
                {"CreatedDate", n => { CreatedDate = n.GetDateTimeOffsetValue(); } },
                {"DisplayName", n => { DisplayName = n.GetStringValue(); } },
                {"EstimatedTime", n => { EstimatedTime = n.GetDoubleValue(); } },
                {"FirstLineComment", n => { FirstLineComment = n.GetStringValue(); } },
                {"Id", n => { Id = n.GetIntValue(); } },
                {"InvoiceReference", n => { InvoiceReference = n.GetStringValue(); } },
                {"JobPriority", n => { JobPriority = n.GetObjectValue<JobPriorityDto>(JobPriorityDto.CreateFromDiscriminatorValue); } },
                {"JobPriorityId", n => { JobPriorityId = n.GetIntValue(); } },
                {"JobStatus", n => { JobStatus = n.GetObjectValue<JobStatusDto>(JobStatusDto.CreateFromDiscriminatorValue); } },
                {"JobStatusId", n => { JobStatusId = n.GetIntValue(); } },
                {"JobSubStatus", n => { JobSubStatus = n.GetObjectValue<JobSubStatusDto>(JobSubStatusDto.CreateFromDiscriminatorValue); } },
                {"JobSubStatusId", n => { JobSubStatusId = n.GetIntValue(); } },
                {"JobType", n => { JobType = n.GetObjectValue<JobTypeDto>(JobTypeDto.CreateFromDiscriminatorValue); } },
                {"JobTypeId", n => { JobTypeId = n.GetIntValue(); } },
                {"Modified", n => { Modified = n.GetDateTimeOffsetValue(); } },
                {"NoInvoice", n => { NoInvoice = n.GetBoolValue(); } },
                {"OrderId", n => { OrderId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<JobAddedFieldsDto>("AddedFields", AddedFields);
            writer.WriteStringValue("CreatedBy", CreatedBy);
            writer.WriteDateTimeOffsetValue("CreatedDate", CreatedDate);
            writer.WriteStringValue("DisplayName", DisplayName);
            writer.WriteDoubleValue("EstimatedTime", EstimatedTime);
            writer.WriteStringValue("FirstLineComment", FirstLineComment);
            writer.WriteIntValue("Id", Id);
            writer.WriteStringValue("InvoiceReference", InvoiceReference);
            writer.WriteObjectValue<JobPriorityDto>("JobPriority", JobPriority);
            writer.WriteIntValue("JobPriorityId", JobPriorityId);
            writer.WriteObjectValue<JobStatusDto>("JobStatus", JobStatus);
            writer.WriteIntValue("JobStatusId", JobStatusId);
            writer.WriteObjectValue<JobSubStatusDto>("JobSubStatus", JobSubStatus);
            writer.WriteIntValue("JobSubStatusId", JobSubStatusId);
            writer.WriteObjectValue<JobTypeDto>("JobType", JobType);
            writer.WriteIntValue("JobTypeId", JobTypeId);
            writer.WriteDateTimeOffsetValue("Modified", Modified);
            writer.WriteBoolValue("NoInvoice", NoInvoice);
            writer.WriteStringValue("OrderId", OrderId);
        }
    }
}
