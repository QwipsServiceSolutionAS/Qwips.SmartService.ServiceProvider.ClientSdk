// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.SmartService.ServiceProvider.ClientSdk.Models {
    public class JobDetailDto : IParsable {
        /// <summary>The ClosedDate property</summary>
        public DateTimeOffset? ClosedDate { get; set; }
        /// <summary>The CompletedDate property</summary>
        public DateTimeOffset? CompletedDate { get; set; }
        /// <summary>The CreatedDate property</summary>
        public DateTimeOffset? CreatedDate { get; set; }
        /// <summary>The CustomerCentralSystemId property</summary>
        public int? CustomerCentralSystemId { get; set; }
        /// <summary>The CustomerComment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerComment { get; set; }
#nullable restore
#else
        public string CustomerComment { get; set; }
#endif
        /// <summary>The CustomerDeliveryAdressCity property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerDeliveryAdressCity { get; set; }
#nullable restore
#else
        public string CustomerDeliveryAdressCity { get; set; }
#endif
        /// <summary>The CustomerDeliveryAdressCountry property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerDeliveryAdressCountry { get; set; }
#nullable restore
#else
        public string CustomerDeliveryAdressCountry { get; set; }
#endif
        /// <summary>The CustomerDeliveryAdressName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerDeliveryAdressName { get; set; }
#nullable restore
#else
        public string CustomerDeliveryAdressName { get; set; }
#endif
        /// <summary>The CustomerDeliveryAdressStreet property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerDeliveryAdressStreet { get; set; }
#nullable restore
#else
        public string CustomerDeliveryAdressStreet { get; set; }
#endif
        /// <summary>The CustomerDeliveryAdressZip property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerDeliveryAdressZip { get; set; }
#nullable restore
#else
        public string CustomerDeliveryAdressZip { get; set; }
#endif
        /// <summary>The CustomerId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerId { get; set; }
#nullable restore
#else
        public string CustomerId { get; set; }
#endif
        /// <summary>The CustomerPerson property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public CustomerPersonDataModel? CustomerPerson { get; set; }
#nullable restore
#else
        public CustomerPersonDataModel CustomerPerson { get; set; }
#endif
        /// <summary>The DisplayName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>The EstimatedTime property</summary>
        public double? EstimatedTime { get; set; }
        /// <summary>The FirstLineComment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstLineComment { get; set; }
#nullable restore
#else
        public string FirstLineComment { get; set; }
#endif
        /// <summary>The Flag property</summary>
        public int? Flag { get; set; }
        /// <summary>The HasJobDocuments property</summary>
        public bool? HasJobDocuments { get; set; }
        /// <summary>The HasServiceAgreement property</summary>
        public bool? HasServiceAgreement { get; set; }
        /// <summary>The HasSignature property</summary>
        public bool? HasSignature { get; set; }
        /// <summary>The HazardAnalysis property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JobDocumentModel? HazardAnalysis { get; set; }
#nullable restore
#else
        public JobDocumentModel HazardAnalysis { get; set; }
#endif
        /// <summary>The Id property</summary>
        public int? Id { get; set; }
        /// <summary>The InvoiceComment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceComment { get; set; }
#nullable restore
#else
        public string InvoiceComment { get; set; }
#endif
        /// <summary>The InvoiceReference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceReference { get; set; }
#nullable restore
#else
        public string InvoiceReference { get; set; }
#endif
        /// <summary>The IsClosed property</summary>
        public bool? IsClosed { get; set; }
        /// <summary>The IsParent property</summary>
        public bool? IsParent { get; set; }
        /// <summary>The JobCategory property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? JobCategory { get; set; }
#nullable restore
#else
        public string JobCategory { get; set; }
#endif
        /// <summary>The JobCategoryId property</summary>
        public int? JobCategoryId { get; set; }
        /// <summary>The JobPriority property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? JobPriority { get; set; }
#nullable restore
#else
        public string JobPriority { get; set; }
#endif
        /// <summary>The JobPriorityId property</summary>
        public int? JobPriorityId { get; set; }
        /// <summary>The JobStatus property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? JobStatus { get; set; }
#nullable restore
#else
        public string JobStatus { get; set; }
#endif
        /// <summary>The JobStatusId property</summary>
        public int? JobStatusId { get; set; }
        /// <summary>The JobType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? JobType { get; set; }
#nullable restore
#else
        public string JobType { get; set; }
#endif
        /// <summary>The JobTypeId property</summary>
        public int? JobTypeId { get; set; }
        /// <summary>The MachineCentralSystemId property</summary>
        public int? MachineCentralSystemId { get; set; }
        /// <summary>The MachineFacility property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MachineFacility { get; set; }
#nullable restore
#else
        public string MachineFacility { get; set; }
#endif
        /// <summary>The MachineId property</summary>
        public int? MachineId { get; set; }
        /// <summary>The MachineLocation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MachineLocation { get; set; }
#nullable restore
#else
        public string MachineLocation { get; set; }
#endif
        /// <summary>The MachineModelId property</summary>
        public int? MachineModelId { get; set; }
        /// <summary>The MachineModelName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MachineModelName { get; set; }
#nullable restore
#else
        public string MachineModelName { get; set; }
#endif
        /// <summary>The MachineName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MachineName { get; set; }
#nullable restore
#else
        public string MachineName { get; set; }
#endif
        /// <summary>The MachineSupplierId property</summary>
        public int? MachineSupplierId { get; set; }
        /// <summary>The MachineSupplierName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MachineSupplierName { get; set; }
#nullable restore
#else
        public string MachineSupplierName { get; set; }
#endif
        /// <summary>The MachineTypeId property</summary>
        public int? MachineTypeId { get; set; }
        /// <summary>The MachineTypeName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MachineTypeName { get; set; }
#nullable restore
#else
        public string MachineTypeName { get; set; }
#endif
        /// <summary>The MaterialRows property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<MaterialRow>? MaterialRows { get; set; }
#nullable restore
#else
        public List<MaterialRow> MaterialRows { get; set; }
#endif
        /// <summary>The Modified property</summary>
        public DateTimeOffset? Modified { get; set; }
        /// <summary>The OrderId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrderId { get; set; }
#nullable restore
#else
        public string OrderId { get; set; }
#endif
        /// <summary>The PlannedDate property</summary>
        public DateTimeOffset? PlannedDate { get; set; }
        /// <summary>The RepairCodes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<RepairCodeModel>? RepairCodes { get; set; }
#nullable restore
#else
        public List<RepairCodeModel> RepairCodes { get; set; }
#endif
        /// <summary>The ServiceAgreementNextDate property</summary>
        public DateTimeOffset? ServiceAgreementNextDate { get; set; }
        /// <summary>The ServiceManagerComment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ServiceManagerComment { get; set; }
#nullable restore
#else
        public string ServiceManagerComment { get; set; }
#endif
        /// <summary>The ServiceReport property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JobDocumentModel? ServiceReport { get; set; }
#nullable restore
#else
        public JobDocumentModel ServiceReport { get; set; }
#endif
        /// <summary>The SupplierFailureCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public SupplierFailiureCodeModel? SupplierFailureCode { get; set; }
#nullable restore
#else
        public SupplierFailiureCodeModel SupplierFailureCode { get; set; }
#endif
        /// <summary>The SupplierFailureCodeId property</summary>
        public int? SupplierFailureCodeId { get; set; }
        /// <summary>The TechnicianComment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TechnicianComment { get; set; }
#nullable restore
#else
        public string TechnicianComment { get; set; }
#endif
        /// <summary>The TimeRows property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<TimeRowDto>? TimeRows { get; set; }
#nullable restore
#else
        public List<TimeRowDto> TimeRows { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static JobDetailDto CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new JobDetailDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"ClosedDate", n => { ClosedDate = n.GetDateTimeOffsetValue(); } },
                {"CompletedDate", n => { CompletedDate = n.GetDateTimeOffsetValue(); } },
                {"CreatedDate", n => { CreatedDate = n.GetDateTimeOffsetValue(); } },
                {"CustomerCentralSystemId", n => { CustomerCentralSystemId = n.GetIntValue(); } },
                {"CustomerComment", n => { CustomerComment = n.GetStringValue(); } },
                {"CustomerDeliveryAdressCity", n => { CustomerDeliveryAdressCity = n.GetStringValue(); } },
                {"CustomerDeliveryAdressCountry", n => { CustomerDeliveryAdressCountry = n.GetStringValue(); } },
                {"CustomerDeliveryAdressName", n => { CustomerDeliveryAdressName = n.GetStringValue(); } },
                {"CustomerDeliveryAdressStreet", n => { CustomerDeliveryAdressStreet = n.GetStringValue(); } },
                {"CustomerDeliveryAdressZip", n => { CustomerDeliveryAdressZip = n.GetStringValue(); } },
                {"CustomerId", n => { CustomerId = n.GetStringValue(); } },
                {"CustomerPerson", n => { CustomerPerson = n.GetObjectValue<CustomerPersonDataModel>(CustomerPersonDataModel.CreateFromDiscriminatorValue); } },
                {"DisplayName", n => { DisplayName = n.GetStringValue(); } },
                {"EstimatedTime", n => { EstimatedTime = n.GetDoubleValue(); } },
                {"FirstLineComment", n => { FirstLineComment = n.GetStringValue(); } },
                {"Flag", n => { Flag = n.GetIntValue(); } },
                {"HasJobDocuments", n => { HasJobDocuments = n.GetBoolValue(); } },
                {"HasServiceAgreement", n => { HasServiceAgreement = n.GetBoolValue(); } },
                {"HasSignature", n => { HasSignature = n.GetBoolValue(); } },
                {"HazardAnalysis", n => { HazardAnalysis = n.GetObjectValue<JobDocumentModel>(JobDocumentModel.CreateFromDiscriminatorValue); } },
                {"Id", n => { Id = n.GetIntValue(); } },
                {"InvoiceComment", n => { InvoiceComment = n.GetStringValue(); } },
                {"InvoiceReference", n => { InvoiceReference = n.GetStringValue(); } },
                {"IsClosed", n => { IsClosed = n.GetBoolValue(); } },
                {"IsParent", n => { IsParent = n.GetBoolValue(); } },
                {"JobCategory", n => { JobCategory = n.GetStringValue(); } },
                {"JobCategoryId", n => { JobCategoryId = n.GetIntValue(); } },
                {"JobPriority", n => { JobPriority = n.GetStringValue(); } },
                {"JobPriorityId", n => { JobPriorityId = n.GetIntValue(); } },
                {"JobStatus", n => { JobStatus = n.GetStringValue(); } },
                {"JobStatusId", n => { JobStatusId = n.GetIntValue(); } },
                {"JobType", n => { JobType = n.GetStringValue(); } },
                {"JobTypeId", n => { JobTypeId = n.GetIntValue(); } },
                {"MachineCentralSystemId", n => { MachineCentralSystemId = n.GetIntValue(); } },
                {"MachineFacility", n => { MachineFacility = n.GetStringValue(); } },
                {"MachineId", n => { MachineId = n.GetIntValue(); } },
                {"MachineLocation", n => { MachineLocation = n.GetStringValue(); } },
                {"MachineModelId", n => { MachineModelId = n.GetIntValue(); } },
                {"MachineModelName", n => { MachineModelName = n.GetStringValue(); } },
                {"MachineName", n => { MachineName = n.GetStringValue(); } },
                {"MachineSupplierId", n => { MachineSupplierId = n.GetIntValue(); } },
                {"MachineSupplierName", n => { MachineSupplierName = n.GetStringValue(); } },
                {"MachineTypeId", n => { MachineTypeId = n.GetIntValue(); } },
                {"MachineTypeName", n => { MachineTypeName = n.GetStringValue(); } },
                {"MaterialRows", n => { MaterialRows = n.GetCollectionOfObjectValues<MaterialRow>(MaterialRow.CreateFromDiscriminatorValue)?.ToList(); } },
                {"Modified", n => { Modified = n.GetDateTimeOffsetValue(); } },
                {"OrderId", n => { OrderId = n.GetStringValue(); } },
                {"PlannedDate", n => { PlannedDate = n.GetDateTimeOffsetValue(); } },
                {"RepairCodes", n => { RepairCodes = n.GetCollectionOfObjectValues<RepairCodeModel>(RepairCodeModel.CreateFromDiscriminatorValue)?.ToList(); } },
                {"ServiceAgreementNextDate", n => { ServiceAgreementNextDate = n.GetDateTimeOffsetValue(); } },
                {"ServiceManagerComment", n => { ServiceManagerComment = n.GetStringValue(); } },
                {"ServiceReport", n => { ServiceReport = n.GetObjectValue<JobDocumentModel>(JobDocumentModel.CreateFromDiscriminatorValue); } },
                {"SupplierFailureCode", n => { SupplierFailureCode = n.GetObjectValue<SupplierFailiureCodeModel>(SupplierFailiureCodeModel.CreateFromDiscriminatorValue); } },
                {"SupplierFailureCodeId", n => { SupplierFailureCodeId = n.GetIntValue(); } },
                {"TechnicianComment", n => { TechnicianComment = n.GetStringValue(); } },
                {"TimeRows", n => { TimeRows = n.GetCollectionOfObjectValues<TimeRowDto>(TimeRowDto.CreateFromDiscriminatorValue)?.ToList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("ClosedDate", ClosedDate);
            writer.WriteDateTimeOffsetValue("CompletedDate", CompletedDate);
            writer.WriteDateTimeOffsetValue("CreatedDate", CreatedDate);
            writer.WriteIntValue("CustomerCentralSystemId", CustomerCentralSystemId);
            writer.WriteStringValue("CustomerComment", CustomerComment);
            writer.WriteStringValue("CustomerDeliveryAdressCity", CustomerDeliveryAdressCity);
            writer.WriteStringValue("CustomerDeliveryAdressCountry", CustomerDeliveryAdressCountry);
            writer.WriteStringValue("CustomerDeliveryAdressName", CustomerDeliveryAdressName);
            writer.WriteStringValue("CustomerDeliveryAdressStreet", CustomerDeliveryAdressStreet);
            writer.WriteStringValue("CustomerDeliveryAdressZip", CustomerDeliveryAdressZip);
            writer.WriteStringValue("CustomerId", CustomerId);
            writer.WriteObjectValue<CustomerPersonDataModel>("CustomerPerson", CustomerPerson);
            writer.WriteStringValue("DisplayName", DisplayName);
            writer.WriteDoubleValue("EstimatedTime", EstimatedTime);
            writer.WriteStringValue("FirstLineComment", FirstLineComment);
            writer.WriteIntValue("Flag", Flag);
            writer.WriteBoolValue("HasJobDocuments", HasJobDocuments);
            writer.WriteBoolValue("HasServiceAgreement", HasServiceAgreement);
            writer.WriteBoolValue("HasSignature", HasSignature);
            writer.WriteObjectValue<JobDocumentModel>("HazardAnalysis", HazardAnalysis);
            writer.WriteIntValue("Id", Id);
            writer.WriteStringValue("InvoiceComment", InvoiceComment);
            writer.WriteStringValue("InvoiceReference", InvoiceReference);
            writer.WriteBoolValue("IsClosed", IsClosed);
            writer.WriteBoolValue("IsParent", IsParent);
            writer.WriteStringValue("JobCategory", JobCategory);
            writer.WriteIntValue("JobCategoryId", JobCategoryId);
            writer.WriteStringValue("JobPriority", JobPriority);
            writer.WriteIntValue("JobPriorityId", JobPriorityId);
            writer.WriteStringValue("JobStatus", JobStatus);
            writer.WriteIntValue("JobStatusId", JobStatusId);
            writer.WriteStringValue("JobType", JobType);
            writer.WriteIntValue("JobTypeId", JobTypeId);
            writer.WriteIntValue("MachineCentralSystemId", MachineCentralSystemId);
            writer.WriteStringValue("MachineFacility", MachineFacility);
            writer.WriteIntValue("MachineId", MachineId);
            writer.WriteStringValue("MachineLocation", MachineLocation);
            writer.WriteIntValue("MachineModelId", MachineModelId);
            writer.WriteStringValue("MachineModelName", MachineModelName);
            writer.WriteStringValue("MachineName", MachineName);
            writer.WriteIntValue("MachineSupplierId", MachineSupplierId);
            writer.WriteStringValue("MachineSupplierName", MachineSupplierName);
            writer.WriteIntValue("MachineTypeId", MachineTypeId);
            writer.WriteStringValue("MachineTypeName", MachineTypeName);
            writer.WriteCollectionOfObjectValues<MaterialRow>("MaterialRows", MaterialRows);
            writer.WriteDateTimeOffsetValue("Modified", Modified);
            writer.WriteStringValue("OrderId", OrderId);
            writer.WriteDateTimeOffsetValue("PlannedDate", PlannedDate);
            writer.WriteCollectionOfObjectValues<RepairCodeModel>("RepairCodes", RepairCodes);
            writer.WriteDateTimeOffsetValue("ServiceAgreementNextDate", ServiceAgreementNextDate);
            writer.WriteStringValue("ServiceManagerComment", ServiceManagerComment);
            writer.WriteObjectValue<JobDocumentModel>("ServiceReport", ServiceReport);
            writer.WriteObjectValue<SupplierFailiureCodeModel>("SupplierFailureCode", SupplierFailureCode);
            writer.WriteIntValue("SupplierFailureCodeId", SupplierFailureCodeId);
            writer.WriteStringValue("TechnicianComment", TechnicianComment);
            writer.WriteCollectionOfObjectValues<TimeRowDto>("TimeRows", TimeRows);
        }
    }
}
