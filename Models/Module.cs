// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.SmartService.ServiceProvider.ClientSdk.Models {
    public class Module : IParsable {
        /// <summary>The Assembly property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Qwips.SmartService.ServiceProvider.ClientSdk.Models.Assembly? Assembly { get; set; }
#nullable restore
#else
        public Qwips.SmartService.ServiceProvider.ClientSdk.Models.Assembly Assembly { get; set; }
#endif
        /// <summary>The CustomAttributes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<CustomAttributeData>? CustomAttributes { get; private set; }
#nullable restore
#else
        public List<CustomAttributeData> CustomAttributes { get; private set; }
#endif
        /// <summary>The FullyQualifiedName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FullyQualifiedName { get; private set; }
#nullable restore
#else
        public string FullyQualifiedName { get; private set; }
#endif
        /// <summary>The MDStreamVersion property</summary>
        public int? MDStreamVersion { get; private set; }
        /// <summary>The MetadataToken property</summary>
        public int? MetadataToken { get; private set; }
        /// <summary>The ModuleHandle property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ModuleHandleObject? ModuleHandle { get; set; }
#nullable restore
#else
        public ModuleHandleObject ModuleHandle { get; set; }
#endif
        /// <summary>The ModuleVersionId property</summary>
        public Guid? ModuleVersionId { get; private set; }
        /// <summary>The Name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; private set; }
#nullable restore
#else
        public string Name { get; private set; }
#endif
        /// <summary>The ScopeName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ScopeName { get; private set; }
#nullable restore
#else
        public string ScopeName { get; private set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Module CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Module();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"Assembly", n => { Assembly = n.GetObjectValue<Qwips.SmartService.ServiceProvider.ClientSdk.Models.Assembly>(Qwips.SmartService.ServiceProvider.ClientSdk.Models.Assembly.CreateFromDiscriminatorValue); } },
                {"CustomAttributes", n => { CustomAttributes = n.GetCollectionOfObjectValues<CustomAttributeData>(CustomAttributeData.CreateFromDiscriminatorValue)?.ToList(); } },
                {"FullyQualifiedName", n => { FullyQualifiedName = n.GetStringValue(); } },
                {"MDStreamVersion", n => { MDStreamVersion = n.GetIntValue(); } },
                {"MetadataToken", n => { MetadataToken = n.GetIntValue(); } },
                {"ModuleHandle", n => { ModuleHandle = n.GetObjectValue<ModuleHandleObject>(ModuleHandleObject.CreateFromDiscriminatorValue); } },
                {"ModuleVersionId", n => { ModuleVersionId = n.GetGuidValue(); } },
                {"Name", n => { Name = n.GetStringValue(); } },
                {"ScopeName", n => { ScopeName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<Qwips.SmartService.ServiceProvider.ClientSdk.Models.Assembly>("Assembly", Assembly);
            writer.WriteObjectValue<ModuleHandleObject>("ModuleHandle", ModuleHandle);
        }
    }
}
