// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.SmartService.ServiceProvider.ClientSdk.Models {
    public class AdvancedJobListFilterDto : IParsable {
        /// <summary>The CreatedDateRangeEnd property</summary>
        public DateTimeOffset? CreatedDateRangeEnd { get; set; }
        /// <summary>The CreatedDateRangeStart property</summary>
        public DateTimeOffset? CreatedDateRangeStart { get; set; }
        /// <summary>The CustomerGroupId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerGroupId { get; set; }
#nullable restore
#else
        public string CustomerGroupId { get; set; }
#endif
        /// <summary>The CustomerId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerId { get; set; }
#nullable restore
#else
        public string CustomerId { get; set; }
#endif
        /// <summary>The ExcludeItemIdList property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? ExcludeItemIdList { get; set; }
#nullable restore
#else
        public List<int?> ExcludeItemIdList { get; set; }
#endif
        /// <summary>The InvoiceCustomerId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceCustomerId { get; set; }
#nullable restore
#else
        public string InvoiceCustomerId { get; set; }
#endif
        /// <summary>The ItemsPerPage property</summary>
        public int? ItemsPerPage { get; set; }
        /// <summary>The JobPriorityIdList property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? JobPriorityIdList { get; set; }
#nullable restore
#else
        public List<int?> JobPriorityIdList { get; set; }
#endif
        /// <summary>The JobTypeIdList property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? JobTypeIdList { get; set; }
#nullable restore
#else
        public List<int?> JobTypeIdList { get; set; }
#endif
        /// <summary>The MachineModelIdList property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? MachineModelIdList { get; set; }
#nullable restore
#else
        public List<int?> MachineModelIdList { get; set; }
#endif
        /// <summary>The MachineTypeIdList property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? MachineTypeIdList { get; set; }
#nullable restore
#else
        public List<int?> MachineTypeIdList { get; set; }
#endif
        /// <summary>The OnlyMine property</summary>
        public bool? OnlyMine { get; set; }
        /// <summary>The Page property</summary>
        public int? Page { get; set; }
        /// <summary>The ParentCustomerId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParentCustomerId { get; set; }
#nullable restore
#else
        public string ParentCustomerId { get; set; }
#endif
        /// <summary>The PrependItemIdList property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? PrependItemIdList { get; set; }
#nullable restore
#else
        public List<int?> PrependItemIdList { get; set; }
#endif
        /// <summary>The SearchWord property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SearchWord { get; set; }
#nullable restore
#else
        public string SearchWord { get; set; }
#endif
        /// <summary>The StatusIdList property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? StatusIdList { get; set; }
#nullable restore
#else
        public List<int?> StatusIdList { get; set; }
#endif
        /// <summary>The SubStatusIdList property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? SubStatusIdList { get; set; }
#nullable restore
#else
        public List<int?> SubStatusIdList { get; set; }
#endif
        /// <summary>The SupplierIdList property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? SupplierIdList { get; set; }
#nullable restore
#else
        public List<int?> SupplierIdList { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static AdvancedJobListFilterDto CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new AdvancedJobListFilterDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"CreatedDateRangeEnd", n => { CreatedDateRangeEnd = n.GetDateTimeOffsetValue(); } },
                {"CreatedDateRangeStart", n => { CreatedDateRangeStart = n.GetDateTimeOffsetValue(); } },
                {"CustomerGroupId", n => { CustomerGroupId = n.GetStringValue(); } },
                {"CustomerId", n => { CustomerId = n.GetStringValue(); } },
                {"ExcludeItemIdList", n => { ExcludeItemIdList = n.GetCollectionOfPrimitiveValues<int?>()?.ToList(); } },
                {"InvoiceCustomerId", n => { InvoiceCustomerId = n.GetStringValue(); } },
                {"ItemsPerPage", n => { ItemsPerPage = n.GetIntValue(); } },
                {"JobPriorityIdList", n => { JobPriorityIdList = n.GetCollectionOfPrimitiveValues<int?>()?.ToList(); } },
                {"JobTypeIdList", n => { JobTypeIdList = n.GetCollectionOfPrimitiveValues<int?>()?.ToList(); } },
                {"MachineModelIdList", n => { MachineModelIdList = n.GetCollectionOfPrimitiveValues<int?>()?.ToList(); } },
                {"MachineTypeIdList", n => { MachineTypeIdList = n.GetCollectionOfPrimitiveValues<int?>()?.ToList(); } },
                {"OnlyMine", n => { OnlyMine = n.GetBoolValue(); } },
                {"Page", n => { Page = n.GetIntValue(); } },
                {"ParentCustomerId", n => { ParentCustomerId = n.GetStringValue(); } },
                {"PrependItemIdList", n => { PrependItemIdList = n.GetCollectionOfPrimitiveValues<int?>()?.ToList(); } },
                {"SearchWord", n => { SearchWord = n.GetStringValue(); } },
                {"StatusIdList", n => { StatusIdList = n.GetCollectionOfPrimitiveValues<int?>()?.ToList(); } },
                {"SubStatusIdList", n => { SubStatusIdList = n.GetCollectionOfPrimitiveValues<int?>()?.ToList(); } },
                {"SupplierIdList", n => { SupplierIdList = n.GetCollectionOfPrimitiveValues<int?>()?.ToList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("CreatedDateRangeEnd", CreatedDateRangeEnd);
            writer.WriteDateTimeOffsetValue("CreatedDateRangeStart", CreatedDateRangeStart);
            writer.WriteStringValue("CustomerGroupId", CustomerGroupId);
            writer.WriteStringValue("CustomerId", CustomerId);
            writer.WriteCollectionOfPrimitiveValues<int?>("ExcludeItemIdList", ExcludeItemIdList);
            writer.WriteStringValue("InvoiceCustomerId", InvoiceCustomerId);
            writer.WriteIntValue("ItemsPerPage", ItemsPerPage);
            writer.WriteCollectionOfPrimitiveValues<int?>("JobPriorityIdList", JobPriorityIdList);
            writer.WriteCollectionOfPrimitiveValues<int?>("JobTypeIdList", JobTypeIdList);
            writer.WriteCollectionOfPrimitiveValues<int?>("MachineModelIdList", MachineModelIdList);
            writer.WriteCollectionOfPrimitiveValues<int?>("MachineTypeIdList", MachineTypeIdList);
            writer.WriteBoolValue("OnlyMine", OnlyMine);
            writer.WriteIntValue("Page", Page);
            writer.WriteStringValue("ParentCustomerId", ParentCustomerId);
            writer.WriteCollectionOfPrimitiveValues<int?>("PrependItemIdList", PrependItemIdList);
            writer.WriteStringValue("SearchWord", SearchWord);
            writer.WriteCollectionOfPrimitiveValues<int?>("StatusIdList", StatusIdList);
            writer.WriteCollectionOfPrimitiveValues<int?>("SubStatusIdList", SubStatusIdList);
            writer.WriteCollectionOfPrimitiveValues<int?>("SupplierIdList", SupplierIdList);
        }
    }
}
