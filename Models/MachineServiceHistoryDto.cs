// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Qwips.SmartService.ServiceProvider.ClientSdk.Models {
    public class MachineServiceHistoryDto : IParsable {
        /// <summary>The ClosedDate property</summary>
        public DateTimeOffset? ClosedDate { get; set; }
        /// <summary>The CompletedDate property</summary>
        public DateTimeOffset? CompletedDate { get; set; }
        /// <summary>The ContractId property</summary>
        public int? ContractId { get; set; }
        /// <summary>The CreatedDate property</summary>
        public DateTimeOffset? CreatedDate { get; set; }
        /// <summary>The CustomerComment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerComment { get; set; }
#nullable restore
#else
        public string CustomerComment { get; set; }
#endif
        /// <summary>The CustomerDeliveryAdressCity property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerDeliveryAdressCity { get; set; }
#nullable restore
#else
        public string CustomerDeliveryAdressCity { get; set; }
#endif
        /// <summary>The CustomerDeliveryAdressCountry property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerDeliveryAdressCountry { get; set; }
#nullable restore
#else
        public string CustomerDeliveryAdressCountry { get; set; }
#endif
        /// <summary>The CustomerDeliveryAdressStreet property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerDeliveryAdressStreet { get; set; }
#nullable restore
#else
        public string CustomerDeliveryAdressStreet { get; set; }
#endif
        /// <summary>The CustomerDeliveryAdressZip property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerDeliveryAdressZip { get; set; }
#nullable restore
#else
        public string CustomerDeliveryAdressZip { get; set; }
#endif
        /// <summary>The CustomerId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerId { get; set; }
#nullable restore
#else
        public string CustomerId { get; set; }
#endif
        /// <summary>The CustomerIsActive property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerIsActive { get; set; }
#nullable restore
#else
        public string CustomerIsActive { get; set; }
#endif
        /// <summary>The CustomerName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerName { get; set; }
#nullable restore
#else
        public string CustomerName { get; set; }
#endif
        /// <summary>The EstimatedTime property</summary>
        public double? EstimatedTime { get; set; }
        /// <summary>The FirstLineComment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstLineComment { get; set; }
#nullable restore
#else
        public string FirstLineComment { get; set; }
#endif
        /// <summary>The Flag property</summary>
        public int? Flag { get; set; }
        /// <summary>The Id property</summary>
        public int? Id { get; set; }
        /// <summary>The InvoiceComment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceComment { get; set; }
#nullable restore
#else
        public string InvoiceComment { get; set; }
#endif
        /// <summary>The InvoiceId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceId { get; set; }
#nullable restore
#else
        public string InvoiceId { get; set; }
#endif
        /// <summary>The JobCategory property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? JobCategory { get; set; }
#nullable restore
#else
        public string JobCategory { get; set; }
#endif
        /// <summary>The JobId property</summary>
        public int? JobId { get; set; }
        /// <summary>The JobPriority property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? JobPriority { get; set; }
#nullable restore
#else
        public string JobPriority { get; set; }
#endif
        /// <summary>The JobPriorityId property</summary>
        public int? JobPriorityId { get; set; }
        /// <summary>The JobStatus property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? JobStatus { get; set; }
#nullable restore
#else
        public string JobStatus { get; set; }
#endif
        /// <summary>The JobType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? JobType { get; set; }
#nullable restore
#else
        public string JobType { get; set; }
#endif
        /// <summary>The KpidrivingCost property</summary>
        public double? KpidrivingCost { get; set; }
        /// <summary>The KpiestimatedTime property</summary>
        public double? KpiestimatedTime { get; set; }
        /// <summary>The KpifirstTimeFix property</summary>
        public bool? KpifirstTimeFix { get; set; }
        /// <summary>The Kpiinstall property</summary>
        public bool? Kpiinstall { get; set; }
        /// <summary>The KpipartCost property</summary>
        public double? KpipartCost { get; set; }
        /// <summary>The KpiphoneFix property</summary>
        public bool? KpiphoneFix { get; set; }
        /// <summary>The KpiplannedMaintenance property</summary>
        public bool? KpiplannedMaintenance { get; set; }
        /// <summary>The Kpirecall property</summary>
        public bool? Kpirecall { get; set; }
        /// <summary>The Kpiremoval property</summary>
        public bool? Kpiremoval { get; set; }
        /// <summary>The Kpirewrite property</summary>
        public bool? Kpirewrite { get; set; }
        /// <summary>The KpisupportTime property</summary>
        public double? KpisupportTime { get; set; }
        /// <summary>The KpiworkCost property</summary>
        public double? KpiworkCost { get; set; }
        /// <summary>The MachineCategory property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MachineCategory { get; set; }
#nullable restore
#else
        public string MachineCategory { get; set; }
#endif
        /// <summary>The MachineDisplayName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MachineDisplayName { get; set; }
#nullable restore
#else
        public string MachineDisplayName { get; set; }
#endif
        /// <summary>The MachineId property</summary>
        public int? MachineId { get; set; }
        /// <summary>The MachineModel property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MachineModel { get; set; }
#nullable restore
#else
        public string MachineModel { get; set; }
#endif
        /// <summary>The MachineName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MachineName { get; set; }
#nullable restore
#else
        public string MachineName { get; set; }
#endif
        /// <summary>The MachineQrCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MachineQrCode { get; set; }
#nullable restore
#else
        public string MachineQrCode { get; set; }
#endif
        /// <summary>The MachineSerialNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MachineSerialNumber { get; set; }
#nullable restore
#else
        public string MachineSerialNumber { get; set; }
#endif
        /// <summary>The MachineServiceHistoriesParts property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<MachineServiceHistoriesPartDto>? MachineServiceHistoriesParts { get; set; }
#nullable restore
#else
        public List<MachineServiceHistoriesPartDto> MachineServiceHistoriesParts { get; set; }
#endif
        /// <summary>The MachineSupplier property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MachineSupplier { get; set; }
#nullable restore
#else
        public string MachineSupplier { get; set; }
#endif
        /// <summary>The NoInvoice property</summary>
        public bool? NoInvoice { get; set; }
        /// <summary>The OrderId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrderId { get; set; }
#nullable restore
#else
        public string OrderId { get; set; }
#endif
        /// <summary>The PlannedDate property</summary>
        public DateTimeOffset? PlannedDate { get; set; }
        /// <summary>The RepairCodes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<RepairCodeDto>? RepairCodes { get; set; }
#nullable restore
#else
        public List<RepairCodeDto> RepairCodes { get; set; }
#endif
        /// <summary>The ResponseDate property</summary>
        public DateTimeOffset? ResponseDate { get; set; }
        /// <summary>The ServiceAgreement property</summary>
        public bool? ServiceAgreement { get; set; }
        /// <summary>The ServiceHistoryOrderReference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ServiceHistoryOrderReference { get; set; }
#nullable restore
#else
        public string ServiceHistoryOrderReference { get; set; }
#endif
        /// <summary>The ServiceManagerComment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ServiceManagerComment { get; set; }
#nullable restore
#else
        public string ServiceManagerComment { get; set; }
#endif
        /// <summary>The TechnicianComment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TechnicianComment { get; set; }
#nullable restore
#else
        public string TechnicianComment { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static MachineServiceHistoryDto CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new MachineServiceHistoryDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"ClosedDate", n => { ClosedDate = n.GetDateTimeOffsetValue(); } },
                {"CompletedDate", n => { CompletedDate = n.GetDateTimeOffsetValue(); } },
                {"ContractId", n => { ContractId = n.GetIntValue(); } },
                {"CreatedDate", n => { CreatedDate = n.GetDateTimeOffsetValue(); } },
                {"CustomerComment", n => { CustomerComment = n.GetStringValue(); } },
                {"CustomerDeliveryAdressCity", n => { CustomerDeliveryAdressCity = n.GetStringValue(); } },
                {"CustomerDeliveryAdressCountry", n => { CustomerDeliveryAdressCountry = n.GetStringValue(); } },
                {"CustomerDeliveryAdressStreet", n => { CustomerDeliveryAdressStreet = n.GetStringValue(); } },
                {"CustomerDeliveryAdressZip", n => { CustomerDeliveryAdressZip = n.GetStringValue(); } },
                {"CustomerId", n => { CustomerId = n.GetStringValue(); } },
                {"CustomerIsActive", n => { CustomerIsActive = n.GetStringValue(); } },
                {"CustomerName", n => { CustomerName = n.GetStringValue(); } },
                {"EstimatedTime", n => { EstimatedTime = n.GetDoubleValue(); } },
                {"FirstLineComment", n => { FirstLineComment = n.GetStringValue(); } },
                {"Flag", n => { Flag = n.GetIntValue(); } },
                {"Id", n => { Id = n.GetIntValue(); } },
                {"InvoiceComment", n => { InvoiceComment = n.GetStringValue(); } },
                {"InvoiceId", n => { InvoiceId = n.GetStringValue(); } },
                {"JobCategory", n => { JobCategory = n.GetStringValue(); } },
                {"JobId", n => { JobId = n.GetIntValue(); } },
                {"JobPriority", n => { JobPriority = n.GetStringValue(); } },
                {"JobPriorityId", n => { JobPriorityId = n.GetIntValue(); } },
                {"JobStatus", n => { JobStatus = n.GetStringValue(); } },
                {"JobType", n => { JobType = n.GetStringValue(); } },
                {"KpidrivingCost", n => { KpidrivingCost = n.GetDoubleValue(); } },
                {"KpiestimatedTime", n => { KpiestimatedTime = n.GetDoubleValue(); } },
                {"KpifirstTimeFix", n => { KpifirstTimeFix = n.GetBoolValue(); } },
                {"Kpiinstall", n => { Kpiinstall = n.GetBoolValue(); } },
                {"KpipartCost", n => { KpipartCost = n.GetDoubleValue(); } },
                {"KpiphoneFix", n => { KpiphoneFix = n.GetBoolValue(); } },
                {"KpiplannedMaintenance", n => { KpiplannedMaintenance = n.GetBoolValue(); } },
                {"Kpirecall", n => { Kpirecall = n.GetBoolValue(); } },
                {"Kpiremoval", n => { Kpiremoval = n.GetBoolValue(); } },
                {"Kpirewrite", n => { Kpirewrite = n.GetBoolValue(); } },
                {"KpisupportTime", n => { KpisupportTime = n.GetDoubleValue(); } },
                {"KpiworkCost", n => { KpiworkCost = n.GetDoubleValue(); } },
                {"MachineCategory", n => { MachineCategory = n.GetStringValue(); } },
                {"MachineDisplayName", n => { MachineDisplayName = n.GetStringValue(); } },
                {"MachineId", n => { MachineId = n.GetIntValue(); } },
                {"MachineModel", n => { MachineModel = n.GetStringValue(); } },
                {"MachineName", n => { MachineName = n.GetStringValue(); } },
                {"MachineQrCode", n => { MachineQrCode = n.GetStringValue(); } },
                {"MachineSerialNumber", n => { MachineSerialNumber = n.GetStringValue(); } },
                {"MachineServiceHistoriesParts", n => { MachineServiceHistoriesParts = n.GetCollectionOfObjectValues<MachineServiceHistoriesPartDto>(MachineServiceHistoriesPartDto.CreateFromDiscriminatorValue)?.ToList(); } },
                {"MachineSupplier", n => { MachineSupplier = n.GetStringValue(); } },
                {"NoInvoice", n => { NoInvoice = n.GetBoolValue(); } },
                {"OrderId", n => { OrderId = n.GetStringValue(); } },
                {"PlannedDate", n => { PlannedDate = n.GetDateTimeOffsetValue(); } },
                {"RepairCodes", n => { RepairCodes = n.GetCollectionOfObjectValues<RepairCodeDto>(RepairCodeDto.CreateFromDiscriminatorValue)?.ToList(); } },
                {"ResponseDate", n => { ResponseDate = n.GetDateTimeOffsetValue(); } },
                {"ServiceAgreement", n => { ServiceAgreement = n.GetBoolValue(); } },
                {"ServiceHistoryOrderReference", n => { ServiceHistoryOrderReference = n.GetStringValue(); } },
                {"ServiceManagerComment", n => { ServiceManagerComment = n.GetStringValue(); } },
                {"TechnicianComment", n => { TechnicianComment = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("ClosedDate", ClosedDate);
            writer.WriteDateTimeOffsetValue("CompletedDate", CompletedDate);
            writer.WriteIntValue("ContractId", ContractId);
            writer.WriteDateTimeOffsetValue("CreatedDate", CreatedDate);
            writer.WriteStringValue("CustomerComment", CustomerComment);
            writer.WriteStringValue("CustomerDeliveryAdressCity", CustomerDeliveryAdressCity);
            writer.WriteStringValue("CustomerDeliveryAdressCountry", CustomerDeliveryAdressCountry);
            writer.WriteStringValue("CustomerDeliveryAdressStreet", CustomerDeliveryAdressStreet);
            writer.WriteStringValue("CustomerDeliveryAdressZip", CustomerDeliveryAdressZip);
            writer.WriteStringValue("CustomerId", CustomerId);
            writer.WriteStringValue("CustomerIsActive", CustomerIsActive);
            writer.WriteStringValue("CustomerName", CustomerName);
            writer.WriteDoubleValue("EstimatedTime", EstimatedTime);
            writer.WriteStringValue("FirstLineComment", FirstLineComment);
            writer.WriteIntValue("Flag", Flag);
            writer.WriteIntValue("Id", Id);
            writer.WriteStringValue("InvoiceComment", InvoiceComment);
            writer.WriteStringValue("InvoiceId", InvoiceId);
            writer.WriteStringValue("JobCategory", JobCategory);
            writer.WriteIntValue("JobId", JobId);
            writer.WriteStringValue("JobPriority", JobPriority);
            writer.WriteIntValue("JobPriorityId", JobPriorityId);
            writer.WriteStringValue("JobStatus", JobStatus);
            writer.WriteStringValue("JobType", JobType);
            writer.WriteDoubleValue("KpidrivingCost", KpidrivingCost);
            writer.WriteDoubleValue("KpiestimatedTime", KpiestimatedTime);
            writer.WriteBoolValue("KpifirstTimeFix", KpifirstTimeFix);
            writer.WriteBoolValue("Kpiinstall", Kpiinstall);
            writer.WriteDoubleValue("KpipartCost", KpipartCost);
            writer.WriteBoolValue("KpiphoneFix", KpiphoneFix);
            writer.WriteBoolValue("KpiplannedMaintenance", KpiplannedMaintenance);
            writer.WriteBoolValue("Kpirecall", Kpirecall);
            writer.WriteBoolValue("Kpiremoval", Kpiremoval);
            writer.WriteBoolValue("Kpirewrite", Kpirewrite);
            writer.WriteDoubleValue("KpisupportTime", KpisupportTime);
            writer.WriteDoubleValue("KpiworkCost", KpiworkCost);
            writer.WriteStringValue("MachineCategory", MachineCategory);
            writer.WriteStringValue("MachineDisplayName", MachineDisplayName);
            writer.WriteIntValue("MachineId", MachineId);
            writer.WriteStringValue("MachineModel", MachineModel);
            writer.WriteStringValue("MachineName", MachineName);
            writer.WriteStringValue("MachineQrCode", MachineQrCode);
            writer.WriteStringValue("MachineSerialNumber", MachineSerialNumber);
            writer.WriteCollectionOfObjectValues<MachineServiceHistoriesPartDto>("MachineServiceHistoriesParts", MachineServiceHistoriesParts);
            writer.WriteStringValue("MachineSupplier", MachineSupplier);
            writer.WriteBoolValue("NoInvoice", NoInvoice);
            writer.WriteStringValue("OrderId", OrderId);
            writer.WriteDateTimeOffsetValue("PlannedDate", PlannedDate);
            writer.WriteCollectionOfObjectValues<RepairCodeDto>("RepairCodes", RepairCodes);
            writer.WriteDateTimeOffsetValue("ResponseDate", ResponseDate);
            writer.WriteBoolValue("ServiceAgreement", ServiceAgreement);
            writer.WriteStringValue("ServiceHistoryOrderReference", ServiceHistoryOrderReference);
            writer.WriteStringValue("ServiceManagerComment", ServiceManagerComment);
            writer.WriteStringValue("TechnicianComment", TechnicianComment);
        }
    }
}
